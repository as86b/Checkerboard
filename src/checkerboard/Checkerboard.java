package checkerboard;


import java.awt.Color;
import javafx.scene.layout.AnchorPane;
import javafx.scene.shape.Rectangle;

/*
 * To change this license header, choose License Headers in Project Propertiespackage checkerboard;

import javafx.scene.layout.AnchorPane;
import javafx.scene.paint.Color;

/*
 * @author Austin Sizemore
 */

public class Checkerboard {
    private double width;
    private double height;
    private int rows;
    private int columns;
    private double rectangleWidth;
    private double rectangleHeight;
    private AnchorPane anchorPane;
    private Color lightColor;
    private Color darkColor;
    
    //First Constructor for original colors version of checkerboard
    public Checkerboard(int numRows, int numCols, double boardWidth, double boardHeight) {
        this.rows = numRows;
        this.columns = numCols;
        this.width = boardWidth;
        this.height = boardHeight;
        this.lightColor = Color.RED;
        this.darkColor = Color.BLACK;
        
        anchorPane = new AnchorPane();
    }
    
    public Checkerboard(int numRows, int numCols, double boardWidth, double boardHeight, Color lightColor, Color darkColor) {
        this(numRows, numCols, boardWidth, boardHeight);
        
        this.lightColor = lightColor;
        this.darkColor = darkColor;
        
        anchorPane = new AnchorPane();
    }    
    
    //chose to build a grid here and not farther down for some reason
    public AnchorPane build(double width, double height) {
        clear();
        this.width = width;
        this.height = height;
        rectangleWidth = Math.ceil(width / (double)columns);
        rectangleHeight = Math.ceil(height / (double)rows);
        anchorPane.setPrefWidth(width);
        anchorPane.setPrefHeight(height);

        //Dale said to go row first then column
        for (int row = 0; row < rows; row++) {
            for (int col = 0; col <columns; col++) {

                //color variable we will change 
                Color color;

                //Not checking squares before to determine color
                //Checking the rectangle's coordinate will determine color instead
                if(((row + col) % 2) == 0){

                    //Even will be light colors
                    color = lightColor;
                } else {
                    color = darkColor;
                }
                
                //making rectangles dynamically for the checkerboard
                Rectangle rectangle = new Rectangle(rectangleWidth, rectangleHeight, color);
                
                //AnchorPane has setAnchor methods that allow us to set the:
                //(definition from oracle website
                //"distance from the anchor pane's left insets to the child's edge"
                AnchorPane.setLeftAnchor(rectangle, (col * rectangleWidth));
                //"distance from the anchor pane's top insets to the child's edge"
                AnchorPane.setTopAnchor(rectangle, (row * rectangleHeight));
                //AnchorPane.setLeftAnchor(rectangle, (col * rectangleWidth));

                anchorPane.getChildren().add(rectangle);
            }
        }
        
        return anchorPane;
    }
    
    //big reason for crashes in java is from nulls trying ot be used
    public void clear() {
        if(anchorPane != null) {
            anchorPane.getChildren().clear();
        }
    }
    
    //all the functions below are GETTERS
    //returns AnchorPane generated by build function else returns NULL if
    //one hasnt been built yet
    public AnchorPane getBoard() {
        if(anchorPane != null) {
            return anchorPane;
        } else {
            return null;
        }
    }
    
    public int getNumRows() {
        return rows;
    }
    
    public int getNumCols() {
        return columns;
    }
    
    public double getWidth() {
        return width;
    }
    
    public double getHeight() {
        return height;
    }
    
    public Color getLightColor() {
        return lightColor;
    }
    
    public Color getDarkColor() {
        return darkColor;
    }
    
    public double getRectangleWidth() {
        return rectangleWidth;
    }
    
    public double getRectangleHeight() {
        return rectangleHeight;
    }
    
}
